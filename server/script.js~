import io from 'socket.io-client';
var socket = io.connect('http://localhost:8080');

var game = new Game();

function init(){
    if(game.init()){
        console.log("start");
        game.start();
    }
}

function Game(){
    this.canvas = document.getElementById("canvas");
    this.position = document.getElementById("position");
    this.init = function(){
        if(this.canvas.getContext){
            
            Player.prototype.context = this.canvas.getContext('2d');
            this.canvas.width = 500;
            this.canvas.height = 400;

            this.canvas2.width = 500;
            this.canvas2.height = 400;
            
            this.player = new Player();
            this.player.init(100,100,15);

            document.addEventListener('keydown', function(e){
              switch(e.keyCode){
                case 87:
                  game.player.dy = -2
                  break;
                case 83:
                  game.player.dy = +2;
                  break;
                case 65:
                  game.player.dx = -2;
                  break;
                case 68:
                  game.player.dx = +2;
                  break;
              }
            });

            document.addEventListener('keyup', function(e){
              switch(e.keyCode){
                case 87:
                  game.player.dy = 0;
                  break;
                case 83:
                  game.player.dy = 0;
                  break;
                case 65:
                  game.player.dx = 0;
                  break;
                case 68:
                  game.player.dx = 0;
                  break;
              }
            });

            console.log("init finished");
            

            return true;
        } else{
            return false;
        }
    }
    this.start = function(){
      this.player.draw();
      animate();
    }
}

function animate(){
    game.player.animate();
    requestAnimFrame( animate );
}

window.requestAnimFrame = (function(){
    return  window.requestAnimationFrame   ||
        window.webkitRequestAnimationFrame ||
        window.mozRequestAnimationFrame    ||
        window.oRequestAnimationFrame      ||
        window.msRequestAnimationFrame     ||
        function(/* function */ callback, /* DOMElement */ element){
            window.setTimeout(callback, 1000 / 60);
        };
})();

function randomX() {
    var x = Math.floor((Math.random() * (200 + 500 - game.player.r) + (200 + game.player.r)));
    //alert(x);
    return x;
}

function randomY() {
    var y = Math.floor((Math.random() * (200 + 400 - game.player.r) + (200 + game.player.r)));
    //alert(y);
    return y;
}

function Drawble(){
    this.x = 0;
    this.y = 0;
    this.dx = 0;
    this.dy = 0;
    this.init = function(x,y,r){
        this.x = x;
        this.y = y;
        this.r = r;
    }
    this.draw = function(){

    }
}

function Player(){
    this.draw = function(){
        this.context.beginPath();
        this.context.arc(this.x,this.y,this.r,0,2*Math.PI);
        this.context.fillStyle = 'red';
        this.context.fill();
        this.context.stroke();
    }
    this.animate = function(){
      if(this.dx != 0 || this.dy != 0){
        this.context.clearRect(this.x - this.r - 2, this.y - this.r - 2, this.r*2 + 3, this.r*2 + 3);
        this.x += this.dx;
        this.y += this.dy;
        this.draw();
        game.position.innerHTML = "x: " + this.x + "<br>" + "y: " + this.y;
      }
    }
}

Player.prototype = new Drawble();